import type { Components, Doc, FileSort, Repo } from '@fe/types';
export declare const initState: {
    tree: Components.Tree.Node[] | null;
    treeSort: FileSort;
    wordWrap: "on" | "off";
    typewriterMode: boolean;
    showSide: boolean;
    showView: boolean;
    showEditor: boolean;
    editorPreviewExclusive: boolean;
    showXterm: boolean;
    showOutline: boolean;
    autoPreview: boolean;
    syncScroll: boolean;
    showSetting: boolean;
    showExport: boolean;
    showControlCenter: boolean;
    presentation: boolean;
    isFullscreen: boolean;
    currentContent: string;
    inComposition: boolean;
    currentRepo: Repo | undefined;
    currentFile: Doc | null | undefined;
    recentOpenTime: Record<string, number>;
    tabs: Components.FileTabs.Item[];
    previewer: string;
    editor: string;
};
export declare type AppState = typeof initState;
declare const _default: import("vuex").Store<{
    tree: Components.Tree.Node[] | null;
    treeSort: FileSort;
    wordWrap: "on" | "off";
    typewriterMode: boolean;
    showSide: boolean;
    showView: boolean;
    showEditor: boolean;
    editorPreviewExclusive: boolean;
    showXterm: boolean;
    showOutline: boolean;
    autoPreview: boolean;
    syncScroll: boolean;
    showSetting: boolean;
    showExport: boolean;
    showControlCenter: boolean;
    presentation: boolean;
    isFullscreen: boolean;
    currentContent: string;
    inComposition: boolean;
    currentRepo: Repo | undefined;
    currentFile: Doc | null | undefined;
    recentOpenTime: Record<string, number>;
    tabs: Components.FileTabs.Item[];
    previewer: string;
    editor: string;
}>;
export default _default;
